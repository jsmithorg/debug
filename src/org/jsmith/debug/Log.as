package org.jsmith.debug{	import org.jsmith.debug.events.DebugErrorEvent;	import org.jsmith.debug.proxies.*;		/**    * Log is a basic logging tool.  	* 	* <p>Log traces strings to the flash console, but also will try calling	* a javascript method so trace logs can be viewed however the javascript	* method desires - usually via html.</p>    */	public class Log	{		/**		* Boolean to set the active state of the logger.		* set to true, enables logging, set to false disables logging		*/		public static function get isEnabled():Boolean { return _isEnabled; }		public static function set isEnabled(value:Boolean):void { _isEnabled = value; }		private static var _isEnabled:Boolean = false;				public static function get output():LogOutput { return _output; }		public static function set output(value:LogOutput):void 		{ 			_output = value;						createOutputProxy();					}//end property		private static var _output:LogOutput;				private static var _proxy:ILogProxy;				public static function trace(category:String, message:*):void 		{			if(output == null)				output = LogOutput.TRACE;							//don't bother if logging is not active			if(_output != LogOutput.DISABLED && _isEnabled)				_proxy.log(category, LogType.TRACE, message);					}//end method				/**		* Log general information to the traceout		* as well as an html page via javascript logInfo		* method.		*		* @param s The string value to log		*/		public static function info(category:String, message:*):void 		{			if(output == null)				output = LogOutput.TRACE;							//don't bother if logging is not active			if(_output != LogOutput.DISABLED && _isEnabled)				_proxy.log(category, LogType.INFO, message);					}//end method				/**		* Log warning information to the traceout		* as well as an html page via javascript logWarn		* method.		*		* @param s The string value to log		*/		public static function warn(category:String, message:*):void 		{			if(output == null)				output = LogOutput.TRACE;							//don't bother if logging is not active			if(_output != LogOutput.DISABLED && _isEnabled)				_proxy.log(category, LogType.WARN, message);					}//end method				/**		* Log error information to the traceout		* as well as an html page via javascript logError		* method.		*		* @param s The string value to log		*/		public static function error(category:String, message:*):void 		{			if(output == null)				output = LogOutput.TRACE;							//don't bother if logging is not active			if(_output != LogOutput.DISABLED && _isEnabled)				_proxy.log(category, LogType.ERROR, message);					}//end method				public static function fatal(category:String, message:*):void 		{			if(output == null)				output = LogOutput.TRACE;							//don't bother if logging is not active			if(_output != LogOutput.DISABLED && _isEnabled)				_proxy.log(category, LogType.FATAL, message);					}//end method				private static function createOutputProxy():void 		{			_proxy = LogProxyFactory.create(_output);			_proxy.addEventListener(DebugErrorEvent.CREATE_PROXY_ERROR, onCreateProxyError);					}//end method				private static function onCreateProxyError(e:DebugErrorEvent):void		{			isEnabled = false;					}//end method			}//end class	}//end package